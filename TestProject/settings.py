"""
Django settings for TestProject project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'uzpjcql&@d7#3hrpr__&6%ja)6qkoc-=l1*65dxq)k5&2t_(k!'
#SECRET_KEY = os.environ.get("uzpjcql&@d7#3hrpr__&6%ja)6qkoc-=l1*65dxq)k5&2t_(k!")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = int(os.environ.get("DEBUG", default=0))

ALLOWED_HOSTS = ['trojanwall.southeastasia.cloudapp.azure.com', '127.0.0.1', 'localhost', 'trojan-wall.com']
#ALLOWED_HOSTS = ["localhost 127.0.0.1 [::1]"]

# Application definition

INSTALLED_APPS = [
    'testapp.apps.TestappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TestProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'TestProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.postgresql_psycopg2',
        #'ENGINE': 'postgres',
        #'NAME': os.environ.get('POSTGRES_NAME', 'postgres'),
        'NAME': os.environ.get('POSTGRES_NAME', 'postgres'),
        #'USER': os.environ.get('POSTGRES_USER', 'postgres'),
        'USER': os.environ.get('POSTGRES_USER', 'amdb_poc'),
        #'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'postgres'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'B7KM0YzUYPD#47u8KU'),  
        #'HOST': os.getenv('POSTGRES_SERVICE_HOST','127.0.0.1'),             
        'HOST': os.getenv('POSTGRES_SERVICE_HOST','am-poc-db.c7lapgqxoqsv.ap-southeast-1.rds.amazonaws.com'), 
        #'PORT': os.getenv('POSTGRES_SERVICE_PORT',5432)
        'PORT': os.getenv('POSTGRES_SERVICE_PORT',5432)
    }
}




# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'assets')


